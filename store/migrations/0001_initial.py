# Generated by Django 4.1.3 on 2022-11-16 13:58

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CaffeinatedAdd',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('milk', models.PositiveSmallIntegerField(blank=True, default=20, null=True)),
                ('whip_cream', models.PositiveSmallIntegerField(blank=True, default=30, null=True)),
                ('syrup_pump', models.PositiveSmallIntegerField(blank=True, default=20, null=True)),
                ('espresso_shot', models.PositiveSmallIntegerField(blank=True, default=40, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=80)),
                ('mobile_number', models.CharField(max_length=11)),
                ('other_notes', models.TextField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=80)),
                ('location', models.CharField(max_length=90)),
                ('mobile_number', models.CharField(max_length=11)),
                ('districts', models.CharField(choices=[('City Proper', 'City Proper'), ('Arevalo', 'Arevalo'), ('La Paz', 'La Paz'), ('Lapuz', 'Lapuz'), ('Mandurriao', 'Mandurriao'), ('Molo', 'Molo')], default='City Proper', max_length=11)),
                ('label', models.CharField(blank=True, max_length=20, null=True)),
                ('other_notes', models.TextField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('hot_price', models.PositiveIntegerField(default=0)),
                ('cold_price', models.PositiveIntegerField(default=0)),
                ('hot_cold', models.CharField(choices=[('Hot', 'Hot'), ('Cold', 'Cold')], default='Hot', max_length=5)),
                ('milk', models.BooleanField(default=False)),
                ('whip_cream', models.BooleanField(default=False)),
                ('syrup_pump', models.BooleanField(default=False)),
                ('espresso_shot', models.BooleanField(default=False)),
                ('discount_price', models.PositiveIntegerField(blank=True, null=True)),
                ('category', models.CharField(blank=True, choices=[('Coffee Classics', 'Coffee Classics'), ('Special Latte', 'Special Latte'), ('Frappe', 'Frappe'), ('Other Drinks', 'Other Drinks'), ('Starters', 'Starters'), ('Silog Meals', 'Silog Meals'), ('Burger with Fries', 'Burger with Fries'), ('All About Wings', 'All About Wings'), ('Pasta', 'Pasta'), ('Pizza', 'Pizza'), ('Main Course', 'Main Course'), ('Sizzlers', 'Sizzlers')], max_length=17, null=True)),
                ('description', models.TextField(blank=True, default='Lorem ipsum dolor sit amet consectetur adipisicing elit. Quia animi eveniet recusandae. Assumenda ab aliquid deleniti voluptatibus officia. Debitis, quam.', null=True)),
                ('item_slug', models.SlugField(default=None, unique=True)),
                ('image', models.ImageField(default='constant/cafe.jpg', upload_to='items-img')),
                ('caffeinated_add', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='store.caffeinatedadd')),
                ('customer', models.ManyToManyField(blank=True, null=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('ordered_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('ordered', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subtotal', models.PositiveIntegerField(blank=True, null=True)),
                ('delivery_fee', models.PositiveIntegerField(blank=True, default=0, null=True)),
                ('total', models.PositiveIntegerField(blank=True, null=True)),
                ('ordered_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('finish_transaction', models.BooleanField(blank=True, default=False, null=True)),
                ('collection', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.collection')),
                ('delivery', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.delivery')),
                ('order', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.order')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hot_or_cold', models.CharField(choices=[('Hot', 'Hot'), ('Cold', 'Cold')], default='Hot', max_length=5)),
                ('milk', models.BooleanField(default=False)),
                ('whip_cream', models.BooleanField(default=False)),
                ('syrup_pump', models.BooleanField(default=False)),
                ('espresso_shot', models.BooleanField(default=False)),
                ('price', models.PositiveIntegerField(default=0)),
                ('total_price', models.PositiveIntegerField(default=0)),
                ('hot_cold', models.CharField(default='', max_length=4)),
                ('quantity', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)])),
                ('ordered', models.BooleanField(default=False)),
                ('in_cart', models.BooleanField(default=False)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.item')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='items',
            field=models.ManyToManyField(to='store.orderitem'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='delivery',
            name='order',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.order'),
        ),
        migrations.AddField(
            model_name='delivery',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='collection',
            name='order',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='store.order'),
        ),
        migrations.AddField(
            model_name='collection',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
